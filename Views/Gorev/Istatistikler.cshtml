@model todolist.Models.GorevIstatistik

@{
    ViewData["Title"] = "İstatistikler";
}

<div class="container mt-4">
    <div class="row">
        <!-- Toplam Görev Kartı -->
        <div class="col-md-3">
            <div class="card bg-dark text-white shadow-lg mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-2">Toplam Görev</h6>
                            <h3 class="mb-0">@Model.ToplamGorev</h3>
                        </div>
                        <div class="bg-primary bg-opacity-25 rounded-circle p-3">
                            <i class="bi bi-list-check fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tamamlanan Görev Kartı -->
        <div class="col-md-3">
            <div class="card bg-dark text-white shadow-lg mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-2">Tamamlanan</h6>
                            <h3 class="mb-0">@Model.TamamlananGorev</h3>
                        </div>
                        <div class="bg-success bg-opacity-25 rounded-circle p-3">
                            <i class="bi bi-check-circle fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Gecikmiş Görev Kartı -->
        <div class="col-md-3">
            <div class="card bg-dark text-white shadow-lg mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-2">Gecikmiş</h6>
                            <h3 class="mb-0">@Model.GecikmisTamamlanmayanGorev</h3>
                        </div>
                        <div class="bg-danger bg-opacity-25 rounded-circle p-3">
                            <i class="bi bi-exclamation-circle fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tamamlanma Oranı Kartı -->
        <div class="col-md-3">
            <div class="card bg-dark text-white shadow-lg mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-2">Tamamlanma Oranı</h6>
                            <h3 class="mb-0">%@Model.TamamlanmaOrani.ToString("F1")</h3>
                        </div>
                        <div class="bg-info bg-opacity-25 rounded-circle p-3">
                            <i class="bi bi-pie-chart fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Öncelik Dağılımı -->
    <div class="row">
        <div class="col-12">
            <div class="card bg-dark text-white shadow-lg mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="bi bi-bar-chart me-2"></i>
                        Öncelik Dağılımı
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <!-- Yüksek Öncelik -->
                        <div class="col-md-4">
                            <div class="text-center mb-4">
                                <h6 class="text-danger">Yüksek</h6>
                                <div class="display-4">@Model.OncelikDagilimi["Yüksek"]</div>
                                <div class="progress bg-dark">
                                    <div class="progress-bar bg-danger" role="progressbar" 
                                         style="width: @(Model.ToplamGorev == 0 ? 0 : (Model.OncelikDagilimi["Yüksek"] * 100.0 / Model.ToplamGorev))%">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Orta Öncelik -->
                        <div class="col-md-4">
                            <div class="text-center mb-4">
                                <h6 class="text-warning">Orta</h6>
                                <div class="display-4">@Model.OncelikDagilimi["Orta"]</div>
                                <div class="progress bg-dark">
                                    <div class="progress-bar bg-warning" role="progressbar" 
                                         style="width: @(Model.ToplamGorev == 0 ? 0 : (Model.OncelikDagilimi["Orta"] * 100.0 / Model.ToplamGorev))%">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Düşük Öncelik -->
                        <div class="col-md-4">
                            <div class="text-center mb-4">
                                <h6 class="text-success">Düşük</h6>
                                <div class="display-4">@Model.OncelikDagilimi["Düşük"]</div>
                                <div class="progress bg-dark">
                                    <div class="progress-bar bg-success" role="progressbar" 
                                         style="width: @(Model.ToplamGorev == 0 ? 0 : (Model.OncelikDagilimi["Düşük"] * 100.0 / Model.ToplamGorev))%">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        .stat-card {
            border-radius: 15px;
            border: 1px solid;
            height: 100%;
            transition: transform 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-card-body {
            padding: 1.5rem;
            position: relative;
            overflow: hidden;
        }

        .stat-card-icon {
            position: absolute;
            top: 1rem;
            right: 1rem;
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .stat-card-title {
            font-size: 1rem;
            margin-bottom: 0.5rem;
            margin-right: 3rem;
        }

        .stat-card-value {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .stat-card-desc {
            margin-bottom: 0;
            font-size: 0.9rem;
        }

        .priority-stats {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .priority-stat-item {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .priority-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .priority-label {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
        }

        .priority-count {
            font-weight: bold;
        }

        .progress {
            height: 8px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
        }

        .upcoming-tasks {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .upcoming-task-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            background-color: rgba(255, 255, 255, 0.05);
            border-radius: 8px;
            transition: background-color 0.2s ease;
        }

        .upcoming-task-item:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .task-info {
            flex: 1;
            margin-right: 1rem;
        }

        .task-title {
            font-size: 0.95rem;
        }

        .task-due {
            font-size: 0.85rem;
            margin: 0;
        }

        .priority-badge {
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
        }

        .priority-badge[data-priority="yüksek"] {
            background-color: rgba(220, 53, 69, 0.2);
            color: #dc3545;
        }

        .priority-badge[data-priority="orta"] {
            background-color: rgba(255, 193, 7, 0.2);
            color: #ffc107;
        }

        .priority-badge[data-priority="düşük"] {
            background-color: rgba(13, 202, 240, 0.2);
            color: #0dcaf0;
        }

        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .stat-card, .card {
            animation: fadeIn 0.3s ease-out;
        }
    </style>
} 